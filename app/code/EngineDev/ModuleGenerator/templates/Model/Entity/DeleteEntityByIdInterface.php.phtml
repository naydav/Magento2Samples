<?="<?php\n"?>
declare(strict_types=1);

namespace <?=$data['namespace']?>\Model\<?=$data['entity_class_name']?>;

use Magento\Framework\Exception\CouldNotDeleteException;
use Magento\Framework\Exception\NoSuchEntityException;

/**
 * Delete <?=$data['entity_class_name']?> by <?=$data['entity_camelcase_id_field']?> command (Service Provider Interface - SPI)
 *
 * Separate command interface to which Repository proxies initial Delete call, could be considered as SPI - Interfaces
 * that you should extend and implement to customize current behaviour, but NOT expected to be used (called) in the code
 * of business logic directly
 *
 * @see \<?=$data['namespace']?>\Api\<?=$data['entity_class_name']?>RepositoryInterface
 * @api
 */
interface Delete<?=$data['entity_class_name']?>ByIdInterface
{
    /**
     * Delete the <?=$data['entity_class_name']?> data by <?=$data['entity_camelcase_id_field']?><?="\n"?>
     *
     * @param int $<?=$data['entity_camelcase_id_field']?><?="\n"?>
     * @return void
     * @throws NoSuchEntityException
     * @throws CouldNotDeleteException
     */
    public function execute(int $<?=$data['entity_camelcase_id_field']?>);
}
